{"ast":null,"code":"import _classCallCheck from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\src\\\\components\\\\StreamsComponents\\\\StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    _classCallCheck(this, StreamEdit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamEdit).apply(this, arguments));\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.stream) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Loading...\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Edit the Stream\"), React.createElement(StreamForm, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["C:\\git\\react-app-test\\streams\\client\\src\\components\\StreamsComponents\\StreamEdit.js"],"names":["React","connect","fetchStream","StreamForm","StreamEdit","props","match","params","id","stream","onSubmit","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,U;;;;;;;;;;;;;wCACkB;AAChB,WAAKC,KAAL,CAAWH,WAAX,CAAuB,KAAKG,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKH,KAAL,CAAWI,MAAhB,EACI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AAEJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EAfoBV,KAAK,CAACW,S;;AAkB/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SAAO;AACHL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADL,GAAP;AAGH,CAJD;;AAMA,eAAeP,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA,WAAW,EAAXA;AAAF,CAAlB,CAAP,CAA0CE,UAA1C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n    \r\n    render() {\r\n        if (!this.props.stream)\r\n            return <div>Loading...</div>;\r\n            \r\n        return (\r\n            <div>\r\n                <h3>Edit the Stream</h3>\r\n                <StreamForm onSubmit={this.onSubmit} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { \r\n        stream: state.streams[ownProps.match.params.id]\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(StreamEdit);"]},"metadata":{},"sourceType":"module"}