{"ast":null,"code":"import _classCallCheck from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\src\\\\components\\\\StreamsComponents\\\\StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../redux/actions';\n\nvar StreamDelete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamDelete, _React$Component);\n\n  function StreamDelete() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamDelete);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamDelete)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onDelete = function () {\n      _this.props.deleteStream(_this.props.stream.id);\n\n      history.push('/');\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamDelete, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this2.onDelete();\n        },\n        className: \"ui negative button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"div\", {\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Cancel\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.stream);\n\n      if (this.props.stream) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(Modal, {\n          title: \"Delete Stream\",\n          content: \"Are you sure you want to delete the stream with title: \".concat(this.props.stream.title, \"?\"),\n          actions: this.renderActions(),\n          onDismiss: function onDismiss() {\n            return history.push('/');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return StreamDelete;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream,\n  deleteStream: deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["C:\\git\\react-app-test\\streams\\client\\src\\components\\StreamsComponents\\StreamDelete.js"],"names":["React","connect","Modal","history","fetchStream","deleteStream","StreamDelete","onDelete","props","stream","id","push","match","params","console","log","title","renderActions","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,qBAA1C;;IAGMC,Y;;;;;;;;;;;;;;;;;;UAcFC,Q,GAAW,YAAM;AACb,YAAKC,KAAL,CAAWH,YAAX,CAAwB,MAAKG,KAAL,CAAWC,MAAX,CAAkBC,EAA1C;;AACAP,MAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb;AACH,K;;;;;;;wCAhBmB;AAChB,WAAKH,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBH,EAA/C;AACH;;;oCAEe;AAAA;;AACZ,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACH,QAAL,EAAN;AAAA,SAAd;AAAqC,QAAA,SAAS,EAAC,oBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ;AAMH;;;6BAOQ;AACLO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,MAAvB;;AACA,UAAI,KAAKD,KAAL,CAAWC,MAAf,EAAuB;AACnB,eACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AACI,UAAA,KAAK,EAAC,eADV;AAEI,UAAA,OAAO,mEAA4D,KAAKD,KAAL,CAAWC,MAAX,CAAkBO,KAA9E,MAFX;AAGI,UAAA,OAAO,EAAE,KAAKC,aAAL,EAHb;AAII,UAAA,SAAS,EAAE;AAAA,mBAAMd,OAAO,CAACQ,IAAR,CAAa,GAAb,CAAN;AAAA,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAUH,OAXD,MAWO;AACH,eAAO,IAAP;AACH;AACJ;;;;EAnCsBX,KAAK,CAACkB,S;;AAsCjC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SAAO;AAAEZ,IAAAA,MAAM,EAAEW,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBH,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeT,OAAO,CAACkB,eAAD,EAAkB;AAAEf,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,YAAY,EAAZA;AAAf,CAAlB,CAAP,CAAwDC,YAAxD,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Modal from '../Modal';\r\nimport history from '../../history';\r\nimport { fetchStream, deleteStream } from '../../redux/actions';\r\n\r\n\r\nclass StreamDelete extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    renderActions() {\r\n        return (\r\n            <React.Fragment>\r\n                <div onClick={() => this.onDelete()} className=\"ui negative button\">Delete</div>\r\n                <div className=\"ui button\">Cancel</div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.props.deleteStream(this.props.stream.id);\r\n        history.push('/');\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.stream);\r\n        if (this.props.stream) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Modal \r\n                        title=\"Delete Stream\"\r\n                        content={`Are you sure you want to delete the stream with title: ${this.props.stream.title}?`}\r\n                        actions={this.renderActions()}\r\n                        onDismiss={() => history.push('/')}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);"]},"metadata":{},"sourceType":"module"}