{"ast":null,"code":"import _classCallCheck from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\git\\\\react-app-test\\\\streams\\\\client\\\\src\\\\components\\\\StreamsComponents\\\\StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../redux/actions';\n\nvar StreamShow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamShow, _React$Component);\n\n  function StreamShow() {\n    _classCallCheck(this, StreamShow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamShow).apply(this, arguments));\n  }\n\n  _createClass(StreamShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.params.stream) {\n        var _this$props$stream = this.props.stream,\n            title = _this$props$stream.title,\n            description = _this$props$stream.description;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, title), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, description));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n    }\n  }]);\n\n  return StreamShow;\n}(React.Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream\n})(StreamShow);","map":{"version":3,"sources":["C:\\git\\react-app-test\\streams\\client\\src\\components\\StreamsComponents\\StreamShow.js"],"names":["React","connect","fetchStream","StreamShow","props","match","params","id","stream","title","description","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;IAEMC,U;;;;;;;;;;;;;wCACmB;AACjB,WAAKC,KAAL,CAAWF,WAAX,CAAuB,KAAKE,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;;6BAES;AACN,UAAI,KAAKD,MAAL,CAAYE,MAAhB,EAAwB;AAAA,iCACW,KAAKJ,KAAL,CAAWI,MADtB;AAAA,YACZC,KADY,sBACZA,KADY;AAAA,YACLC,WADK,sBACLA,WADK;AAEpB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKC,WAAL,CAFJ,CADJ;AAMH,OARD,MAQO;AACH,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH;AACJ;;;;EAjBoBV,KAAK,CAACW,S;;AAkB9B;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SAAO;AAAEN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeN,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA,WAAW,EAAXA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream } from '../../redux/actions';\r\n\r\nclass StreamShow extends React.Component {\r\n    componentDidMount () {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }   \r\n\r\n    render () {\r\n        if (this.params.stream) {\r\n            const { title, description } = this.props.stream;\r\n            return (\r\n                <div>\r\n                    <h1>{title}</h1>\r\n                    <h3>{description}</h3>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);"]},"metadata":{},"sourceType":"module"}